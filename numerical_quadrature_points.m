
%% Numerical Integration Parameters -  Transform
% NumQuadPoints=[0.425562830509184,0.147762112357376;0.574437169490816,0.147762112357376;0.283302302935376,0.134633359654998;0.716697697064624,0.134633359654998;0.160295215850488,0.109543181257991;0.839704784149512,0.109543181257991;0.0674683166555077,0.0747256745752903;0.932531683344492,0.0747256745752903;0.0130467357414141,0.0333356721543441;0.986953264258586,0.0333356721543441];
% NumQuadPoints=[0.046910077030668,0.1184634425280945;0.2307653449471584,0.2393143352496833;0.5000000000000000,0.2844444444444445;0.7692346550528415,0.2393143352496833;0.953089922969332,0.1184634425280945];
NumQuadPoints=[0.112701665379258,0.277777777777778; 0.500000000000000, 0.444444444444444; 0.887298334620742, 0.277777777777778;]; % point, weight
sqDuf=zeros(size(NumQuadPoints,1),3); % Duf = Duffy? 
% sqDuf(i,:) = ksi, eta, ww
ctri=0;
ctrall=0;
for i=1:1:size(NumQuadPoints,1)
    ctri=ctri+1;
    ctrj=0;
    for j=1:1:size(NumQuadPoints,1)
        ctrj=ctrj+1;
        ctrall=ctrall+1;
        sqDuf(ctrall,1)=NumQuadPoints(ctri,1);
        sqDuf(ctrall,2)=NumQuadPoints(ctrj,1);
        sqDuf(ctrall,3)=NumQuadPoints(ctri,2)*NumQuadPoints(ctrj,2);
    end
end
Nduf=size(sqDuf,1);

Nline=size(NumQuadPoints,1);